<launch>
    <arg name="rviz"       default="false" />
    <arg name="rtabmap_viz" default="false" />
    <arg name="world_frame" default="mir/odom" />
    <arg name="raw_depth" default="/realsense/aligned_depth_to_color/image_raw"/>
    <arg name="clean_depth" default="/realsense/aligned_depth_to_color/image_clean"/>
    <arg name="sim" default="false" />

    <group if="$(arg sim)">
        <param name="robot_description" command="rosparam load $(find s_map)/descriptions/robot_description.yaml"/>
        <rosparam>
            use_sim_time: true
        </rosparam>
        <arg name="rviz"       default="true" />
    </group>
    
    <node pkg="s_map" type="depth_clip.py" name="depth_clip"  output="screen"> <!-- It also performs depth erosion to mitigate depth bleeding artifact-->
        <param name="raw_depth_topic" value="$(arg raw_depth)"/>
        <param name="cleaned_depth_topic" value="$(arg clean_depth)"/>
    </node>

    <node pkg="s_map" type="accumulate_laser.py" name="laser_rtabmap_save"  output="screen">
        <param name="world_frame" value="$(arg world_frame)"/>
    </node>
    
    <node pkg="s_map" type="WorldManager.py" name="world_manager"  output="screen"/>
    <node pkg="s_map" type="rviz_publisher.py" name="rviz_objects_publisher"  output="screen">
        <param name="world_frame" value="$(arg world_frame)"/>
    </node>

    <include file="$(find s_map)/src/launch/map_heron.launch">
        <arg name="mapping" value="true"/>
        <arg name="rgbd" type="bool" value="true" />
        <arg name="odom_topic" value="/odom"/>
        <arg name="map_frame" value="$(arg world_frame)" />
        <arg name="depth_topic" value="$(arg clean_depth)"/>
    </include>

    <node pkg="s_map" type="detection.py" name="s_map_detection"  output="screen">
        <param name="camera_name" value="front"/>
        <param name="rgb_topic" value="realsense/rgb/image_raw"/>
        <param name="depth_topic" value="$(arg clean_depth)"/>
        <param name="camera_info_topic" value="realsense/rgb/camera_info"/>
    </node>

    <node pkg="s_map" type="mapping.py" name="s_map_mapping"  output="screen">
        <param name="world_frame" value="$(arg world_frame)"/>
        <param name="camera_info_topic" value="realsense/rgb/camera_info"/>
    </node>

    <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find s_map)/rviz/heron_config.rviz"/>

</launch>